
Running node-supervisor with
  program './bin/www'
  --watch '.'
  --extensions 'node,js,/bin/www'
  --exec 'node'

Starting child process with 'node ./bin/www'
Watching directory '/home/penzha/Study/PerformanceView_Web' for changes.
Press rs for restarting the process.
[0mGET / [32m200 [0m65.354 ms - 4105[0m
[0mGET /stylesheets/bootstrap.min.css [36m304 [0m6.375 ms - -[0m
[0mGET /public/javascripts/jquery-1.11.3.min.js [33m404 [0m9.334 ms - 1076[0m
--- upload NAR file start
/home/penzha/Study/PerformanceView_Web/routes
--- upload NAR file complete
--- Convert NAR to CSV start - data
--- Convert NAR to CSV complete - data
importing CSV into mongodb......
open mongodb ...
Importing NAR file: /var/tmp/APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00.nar.csv
Import NAR file completed.
new collection name:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00
close mongodb ...
end of mongodb.open()
import data CSV successful
import data CSV successful
--- Convert NAR to XML start - rel
--- Convert NAR to XML complete - rel
XML file:  /var/tmp/APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00.nar.rel.xml
--- Parse XML start - rel
{ text: [Function],
  archivedump: 
   { attributes: [Function],
     parent: [Function],
     count: [Function],
     at: [Function],
     each: [Function],
     text: [Function],
     archivefile: 
      { attributes: [Function],
        parent: [Function],
        count: [Function],
        at: [Function],
        each: [Function],
        text: [Function],
        object: [Object] } } }
SP
read xml successful
basename:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00
mongodb open ---
find SP object
function parseSP
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Port object in SP node
function parsePort
Port name:  Port 0 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:60:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193811,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 0 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:60:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 1 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:61:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193812,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 1 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:61:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 2 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:62:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193813,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 2 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:62:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 3 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:63:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193814,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 3 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:63:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 4 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:64:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193815,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 4 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:64:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 5 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:65:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193816,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 5 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:65:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 6 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:66:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193817,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 6 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:66:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 7 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:67:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193818,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 7 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:67:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 8 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:60:44:64:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193819,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 8 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:60:44:64:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 9 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:61:44:64:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193820,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 9 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:61:44:64:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 10 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:62:44:64:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193821,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 10 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:62:44:64:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 11 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:63:44:64:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193822,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 11 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:63:44:64:26:AB ]' }
parseSP finished
find SP object
function parseSP
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Thin LUN object
find Port object in SP node
function parsePort
Port name:  Port 0 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:68:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193823,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 0 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:68:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 1 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:69:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193824,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 1 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:69:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 2 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6A:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193825,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 2 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6A:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 3 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6B:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193826,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 3 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6B:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 4 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6C:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193827,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 4 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6C:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 5 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6D:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193828,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 5 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6D:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 6 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6E:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193829,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 6 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6E:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 7 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6F:44:60:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193830,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 7 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6F:44:60:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 8 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:68:44:64:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193831,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 8 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:68:44:64:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 9 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:69:44:64:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193832,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 9 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:69:44:64:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 10 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6A:44:64:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193833,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 10 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6A:44:64:26:AB ]' }
find Port object in SP node
function parsePort
Port name:  Port 11 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6B:44:64:26:AB ]
SPPortTableName:  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
parsePort - collection:  { s: 
   { pkFactory: 
      { [Function: ObjectID]
        index: 12193834,
        createPk: [Function: createPk],
        createFromTime: [Function: createFromTime],
        createFromHexString: [Function: createFromHexString],
        isValid: [Function: isValid],
        ObjectID: [Circular],
        ObjectId: [Circular] },
     db: 
      EventEmitter {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        s: [Object],
        serverConfig: [Getter],
        bufferMaxEntries: [Getter],
        databaseName: [Getter],
        options: [Getter],
        native_parser: [Getter],
        slaveOk: [Getter],
        writeConcern: [Getter] },
     topology: 
      EventEmitter {
        domain: null,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        s: [Object],
        bson: [Getter],
        isMasterDoc: [Getter],
        poolSize: [Getter],
        autoReconnect: [Getter],
        host: [Getter],
        port: [Getter] },
     dbName: 'performanceviewer',
     options: { promiseLibrary: [Function: Promise], readConcern: undefined },
     namespace: 'performanceviewer.APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     readPreference: null,
     raw: undefined,
     slaveOk: false,
     serializeFunctions: undefined,
     internalHint: null,
     collectionHint: null,
     name: 'APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports',
     promiseLibrary: [Function: Promise],
     readConcern: undefined } }
find collection -  APM00114301765_SPA_2015-08-07_00-38-02-GMT_M05-00_Rel_SP-Ports
doc:  { parentName: 'Port 11 [FC; 50:06:01:60:C4:60:26:AB:50:06:01:6B:44:64:26:AB ]' }
parseSP finished
find Pool object
find Pool object
find celerra device object
find celerra device object
find celerra device object
find celerra device object
find celerra device object
find celerra device object
read file finished
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
insert port failed
mongodb closed
Parse XML and Save to DB successful
Save Rel XML into mongodb successful
[0mPOST / [32m200 [0m15386.393 ms - 4220[0m
[0mGET /stylesheets/bootstrap.min.css [36m304 [0m2.333 ms - -[0m
[0mGET /public/javascripts/jquery-1.11.3.min.js [33m404 [0m4.191 ms - 1076[0m
Received SIGINT, killing child...
